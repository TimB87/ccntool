---

name: Cargo Build & Test

on:  # yamllint disable-line rule:truthy
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  CARGO_TERM_COLOR: always

jobs:
  build_and_test:
    name: Rust project - ${{ matrix.os }} - ${{ matrix.toolchain }}
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest]
        toolchain: [stable, beta, nightly]

    steps:
      - name: Checkout code
        uses: actions/checkout@v3

      - name: Install toolchain (Linux)
        if: runner.os == 'Linux'
        shell: bash
        run: |
          rustup update ${{ matrix.toolchain }} && rustup default ${{ matrix.toolchain }}

      - name: Install toolchain (Windows)
        if: runner.os == 'Windows'
        shell: pwsh
        run: |
          rustup update ${{ matrix.toolchain }}
          rustup default ${{ matrix.toolchain }}

      - name: Use cache
        if: runner.os == 'Linux'
        uses: Swatinem/rust-cache@v2

      - name: Build with ${{ matrix.toolchain }}
        run: cargo build --verbose --release

      - name: Check with ${{ matrix.toolchain }}
        run: cargo check --verbose

      - name: Upload artifacts (Linux)
        if: runner.os == 'Linux'
        uses: actions/upload-artifact@v4
        with:
          name: binaries-linux-${{ matrix.toolchain }}
          path: |
            target/release/ccntool_gui
            target/release/ccntool_cli
            target/release/ccntool_tui

      - name: Upload artifacts (Windows)
        if: runner.os == 'Windows'
        uses: actions/upload-artifact@v4
        with:
          name: binaries-windows-${{ matrix.toolchain }}
          path: |
            target/release/ccntool_gui.exe
            target/release/ccntool_cli.exe
            target/release/ccntool_tui.exe
